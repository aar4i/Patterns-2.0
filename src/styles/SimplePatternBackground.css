/* Простые анимированные паттерны */
.pattern-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  z-index: 1;
}

/* Уровни интенсивности */
.pattern-subtle {
  opacity: 0.1;
}

.pattern-medium {
  opacity: 0.2;
}

.pattern-strong {
  opacity: 0.3;
}

/* === DOTS PATTERN === */
.dots-container {
  position: relative;
  width: 100%;
  height: 100%;
}

.dot {
  position: absolute;
  width: var(--size);
  height: var(--size);
  background: var(--text-primary, #333);
  border-radius: 50%;
  left: var(--x);
  top: var(--y);
  animation: dotFloat var(--delay, 3s) infinite ease-in-out;
  animation-delay: var(--delay);
}

@keyframes dotFloat {
  0%, 100% {
    transform: translateY(0px) scale(1);
    opacity: 0.7;
  }
  50% {
    transform: translateY(-20px) scale(1.2);
    opacity: 1;
  }
}

/* === LINES PATTERN === */
.lines-container {
  position: relative;
  width: 100%;
  height: 100%;
}

.line {
  position: absolute;
  width: 2px;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent,
    var(--text-primary, #333) 50%,
    transparent
  );
  left: 50%;
  top: 0;
  transform-origin: center bottom;
  transform: translateX(-50%) rotate(var(--angle));
  animation: lineWave 4s infinite ease-in-out;
  animation-delay: var(--delay);
}

@keyframes lineWave {
  0%, 100% {
    opacity: 0.3;
    transform: translateX(-50%) rotate(var(--angle)) scaleY(1);
  }
  50% {
    opacity: 0.8;
    transform: translateX(-50%) rotate(var(--angle)) scaleY(1.2);
  }
}

/* === GRID PATTERN === */
.grid-container {
  position: relative;
  width: 100%;
  height: 100%;
}

.grid-lines {
  position: absolute;
  width: 100%;
  height: 100%;
}

.grid-lines.horizontal {
  background-image: repeating-linear-gradient(
    0deg,
    transparent,
    transparent 49px,
    var(--text-primary, #333) 50px
  );
  animation: gridSlideH 8s infinite linear;
}

.grid-lines.vertical {
  background-image: repeating-linear-gradient(
    90deg,
    transparent,
    transparent 49px,
    var(--text-primary, #333) 50px
  );
  animation: gridSlideV 6s infinite linear;
}

@keyframes gridSlideH {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(50px);
  }
}

@keyframes gridSlideV {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(50px);
  }
}

/* === GEOMETRIC PATTERN === */
.geometric-container {
  position: relative;
  width: 100%;
  height: 100%;
}

.geometric-shape {
  position: absolute;
  width: 20px;
  height: 20px;
  left: var(--x);
  top: var(--y);
  background: var(--text-primary, #333);
  animation: geometricRotate 6s infinite ease-in-out;
  animation-delay: var(--delay);
  transform-origin: center;
}

.geometric-shape:nth-child(odd) {
  border-radius: 50%;
}

.geometric-shape:nth-child(even) {
  transform: rotate(45deg);
}

.geometric-shape:nth-child(3n) {
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  border-radius: 0;
  transform: none;
}

@keyframes geometricRotate {
  0%, 100% {
    transform: rotate(0deg) scale(1);
    opacity: 0.5;
  }
  25% {
    transform: rotate(90deg) scale(1.2);
    opacity: 0.8;
  }
  50% {
    transform: rotate(180deg) scale(0.8);
    opacity: 1;
  }
  75% {
    transform: rotate(270deg) scale(1.1);
    opacity: 0.6;
  }
}

/* Hover эффекты */
.pattern-background:hover .dot {
  animation-duration: 1.5s;
}

.pattern-background:hover .line {
  animation-duration: 2s;
}

.pattern-background:hover .grid-lines.horizontal {
  animation-duration: 4s;
}

.pattern-background:hover .grid-lines.vertical {
  animation-duration: 3s;
}

.pattern-background:hover .geometric-shape {
  animation-duration: 3s;
}

/* Адаптивность */
@media (max-width: 768px) {
  .dot {
    --size: 3px !important;
  }
  
  .line {
    width: 1px;
  }
  
  .geometric-shape {
    width: 15px;
    height: 15px;
  }
  
  .pattern-background {
    opacity: 0.05;
  }
}

@media (max-width: 480px) {
  .pattern-background {
    opacity: 0.03;
  }
} 